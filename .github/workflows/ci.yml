name: CI/CD

on:
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies (with dev extras)
      run: uv sync --extra dev

    - name: Run linting
      run: |
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/

    - name: Run type checking
      run: uv run mypy src/

    - name: Run security checks
      run: |
        uv run bandit -r src/
        uv run safety check

    - name: Run tests
      run: uv run pytest --cov=src/osd_text_extractor --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.12

    - name: Install build dependencies (with dev extras)
      run: uv sync --extra dev

    - name: Build package
      run: uv build

    - name: Check package
      run: uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/osd-text-extractor
    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.release.tag_name }}
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.12

    - name: Install build dependencies (with dev extras)
      run: uv sync --extra dev

    - name: Build package
      run: uv build

    - name: Check package
      run: uv run twine check dist/*

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist
