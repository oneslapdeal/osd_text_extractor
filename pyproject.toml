[project]
name = "osd_text_extractor"
version = "0.1.0"
description = "Module to extract plain text from different formats for LLM purposes"
authors = [
    {name = "OneSlap Team", email = "lxarbuz@gmail.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.12"


dependencies = [
    "beautifulsoup4>=4.13.5",
    "dishka>=1.6.0",
    "lxml>=6.0.1",
    "odfpy>=1.4.1",
    "openpyxl>=3.1.5",
    "pymupdf>=1.26.4",
    "python-docx>=1.2.0",
    "striprtf>=0.0.29",
]

[project.optional-dependencies]
dev = [
    "setuptools>=80.9.0",
    "wheel>=0.45.1",
    "bandit>=1.8.6",
    "mypy>=1.17.1",
    "pylint>=3.3.8",
    "ruff>=0.6.9,<0.7.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "safety>=3.2.8",
    "pre-commit>=3.8.0",
]

[build-system]
requires = ["setuptools>=80.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py312"
line-length = 88
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
#lint.ignore = [
#    "E501",  # line too long, handled by formatter
#    "B008",  # do not perform function calls in argument defaults
#]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict = true
exclude = ["tests/", "migrations/", "build/", "htmlcov/"]
#ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --disable-warnings --cov=src/osd_text_extractor --cov-report=term-missing --cov-report=xml --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = ["default",]

[tool.coverage.run]
source = ["src/osd_text_extractor"]
omit = [
    "**/__init__.py",
    "**/tests/**",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]